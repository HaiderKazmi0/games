// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  lastLogin     DateTime?
  comments      Comment[]
  votes         Vote[]
  ratings       Rating[]
  createdGames  Game[]    @relation("CreatedGames")
}

model Game {
  id          String    @id @default(cuid())
  title       String
  description String
  imageUrl    String
  rating      Float     @default(0)
  creatorId   String
  creator     User      @relation("CreatedGames", fields: [creatorId], references: [id])
  votes       Vote[]
  comments    Comment[]
  ratings     Rating[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        String   @id @default(cuid())
  text      String
  userId    String
  gameId    String
  user      User     @relation(fields: [userId], references: [id])
  game      Game     @relation(fields: [gameId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vote {
  id        String   @id @default(cuid())
  value     Int      // 1 for upvote, -1 for downvote
  userId    String
  gameId    String
  user      User     @relation(fields: [userId], references: [id])
  game      Game     @relation(fields: [gameId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, gameId])
}

model Rating {
  id        String   @id @default(cuid())
  value     Int      // 1-5 stars
  userId    String
  gameId    String
  user      User     @relation(fields: [userId], references: [id])
  game      Game     @relation(fields: [gameId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, gameId])
} 